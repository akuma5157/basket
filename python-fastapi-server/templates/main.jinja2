from __future__ import annotations

from fastapi.middleware.cors import CORSMiddleware

from fastapi import FastAPI

{{imports}}

try:
    from .implementation import Implementation
    implementation = Implementation()
except ModuleNotFoundError as e:
    raise NotImplementedError

app = FastAPI(
    {% if info %}
    {% for key,value in info.items() %}
    {{ key }} = "{{ value }}",
    {% endfor %}
    {% endif %}
)

origins = [
    "http://localhost:4200",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

{% for operation in operations %}
@app.{{operation.type}}('{{operation.snake_case_path}}', response_model={{operation.response}})
def {{operation.function_name}}({{operation.snake_case_arguments}}) -> {{operation.response}}:
    return implementation.{{operation.function_name}}({{operation.snake_case_arguments.split(':')[0] }})
{% endfor %}
